export const en = {
  // Launcher
  launcher: {
    title: 'WPlace AutoBOT',
    autoFarm: 'üåæ Auto-Farm',
    autoImage: 'üé® Auto-Image',
    autoGuard: 'üõ°Ô∏è Auto-Guard',
    autoSlave: 'üîó Slave',
    selection: 'Selection',
    user: 'User',
    charges: 'Charges',
    backend: 'Backend',
    database: 'Database',
    uptime: 'Uptime',
    close: 'Close',
    launch: 'Launch',
    loading: 'Loading‚Ä¶',
    executing: 'Executing‚Ä¶',
    downloading: 'Downloading script‚Ä¶',
    chooseBot: 'Choose a bot and press Launch',
    readyToLaunch: 'Ready to launch',
    loadError: 'Load error',
    loadErrorMsg: 'Could not load the selected bot. Check your connection or try again.',
    checking: 'üîÑ Checking...',
    online: 'üü¢ Online',
    offline: 'üî¥ Offline',
    ok: 'üü¢ OK',
    error: 'üî¥ Error',
    unknown: '-',
    logWindow: 'Logs',
    logWindowTitle: 'Logs - {botName}',
    downloadLogs: 'Download Logs',
    clearLogs: 'Clear Logs',
    closeLogs: 'Close',
    localExecution: 'Local execution with full access to token system',
    botStarting: 'Bot starting...'
  },

  // Image Module
  image: {
    title: "WPlace Auto-Image",
    initBot: "Initialize Auto-BOT",
    uploadImage: "Upload Image",
    resizeImage: "Resize Image",
    selectPosition: "Select Position",
    startPainting: "Start Painting",
    stopPainting: "Stop Painting",
    saveProgress: "Save Progress",
    loadProgress: "Load Progress",

    checkingColors: "üîç Checking available colors...",
    noColorsFound: "‚ùå Open the color palette on the site and try again!",
    colorsFound: "‚úÖ Found {count} available colors",
    loadingImage: "üñºÔ∏è Loading image...",
    imageLoaded: "‚úÖ Image loaded with {count} valid pixels",
    imageError: "‚ùå Error loading image",
    selectPositionAlert: "Paint the first pixel at the location where you want the art to start!",
    waitingPosition: "üëÜ Waiting for you to paint the reference pixel...",
    positionSet: "‚úÖ Position set successfully!",
    positionTimeout: "‚ùå Timeout for position selection",
    positionDetected: "üéØ Position detected, processing...",
    positionError: "‚ùå Error detecting position, please try again",
    startPaintingMsg: "üé® Starting painting...",
    paintingProgress: "üß± Progress: {painted}/{total} pixels...",
    noCharges: "‚åõ No charges. Waiting {time}...",
    paintingStopped: "‚èπÔ∏è Painting stopped by user",
    paintingComplete: "‚úÖ Painting completed! {count} pixels painted.",
    paintingError: "‚ùå Error during painting",
    missingRequirements: "‚ùå Load an image and select a position first",
    progress: "Progress",
    userName: "User",
    pixels: "Pixels",
    charges: "Charges",
    estimatedTime: "Estimated time",
    initMessage: "Click 'Initialize Auto-BOT' to begin",
    waitingInit: "Waiting for initialization...",
    resizeSuccess: "‚úÖ Image resized to {width}x{height}",
    paintingPaused: "‚è∏Ô∏è Painting paused at position X: {x}, Y: {y}",
    pixelsPerBatch: "Pixels per batch",
    batchSize: "Batch size",
    nextBatchTime: "Next batch in",
    useAllCharges: "Use all available charges",
    showOverlay: "Show overlay",
    maxCharges: "Max charges per batch",
    waitingForCharges: "‚è≥ Waiting for charges: {current}/{needed}",
    timeRemaining: "Time remaining",
    cooldownWaiting: "‚è≥ Waiting {time} to continue...",
    progressSaved: "‚úÖ Progress saved as {filename}",
    progressLoaded: "‚úÖ Progress loaded: {painted}/{total} pixels painted",
    progressLoadError: "‚ùå Error loading progress: {error}",
    progressSaveError: "‚ùå Error saving progress: {error}",

    confirmSaveProgress: "Do you want to save the current progress before stopping?",
    saveProgressTitle: "Save Progress",
    discardProgress: "Discard",
    cancel: "Cancel",
    minimize: "Minimize",
    width: "Width",
    height: "Height", 
    keepAspect: "Keep aspect ratio",
    apply: "Apply",
  overlayOn: "Overlay: ON",
  overlayOff: "Overlay: OFF",
    passCompleted: "‚úÖ Pass completed: {painted} pixels painted | Progress: {percent}% ({current}/{total})",
    waitingChargesRegen: "‚è≥ Waiting for charge regeneration: {current}/{needed} - Time: {time}",
    waitingChargesCountdown: "‚è≥ Waiting for charges: {current}/{needed} - Remaining: {time}",
    autoInitializing: "ü§ñ Auto-initializing...",
    autoInitSuccess: "‚úÖ Bot auto-started successfully",
    autoInitFailed: "‚ö†Ô∏è Could not auto-start. Use manual button.",
    paletteDetected: "üé® Color palette detected",
    paletteNotFound: "üîç Searching for color palette...",
    clickingPaintButton: "üëÜ Clicking Paint button...",
    paintButtonNotFound: "‚ùå Paint button not found",
    manualInitRequired: "üîß Manual initialization required",
    retryAttempt: "üîÑ Retry {attempt}/{maxAttempts} in {delay}s...",
    retryError: "üí• Error in attempt {attempt}/{maxAttempts}, retrying in {delay}s...",
    retryFailed: "‚ùå Failed after {maxAttempts} attempts. Continuing with next batch...",
    networkError: "üåê Network error. Retrying...",
    serverError: "üî• Server error. Retrying...",
    timeoutError: "‚è∞ Server timeout, retrying...",
    
    // Additional UI texts
    saveProgressBtn: "Save progress",
    guardJsonBtn: "Guard JSON",
    resizeWindowTitle: "Resize Image",
    original: "Original",
    labTolerance: "LAB Tolerance",
    maintainProportion: "Maintain proportion",
    skipColor: "Skip Color",
    skipColorEnabled: "Skip colors that don't match exactly",
    similarityThreshold: "Similarity threshold",
    skipColorDescription: "Only exact color matches will be painted (100% similarity).",
    applyResize: "Apply",
    cancelResize: "Cancel",
    patternSnake: "Snake (Zigzag)",
    patternDiagonalSweep: "Diagonal sweep",
    patternBorders: "Borders first",
    patternCenter: "Center first",
    patternQuadrants: "Quadrants",
    patternBiasedRandom: "Biased random (edges)",
    patternClusters: "Clusters",
    patternProximity: "Proximity",
    patternSweep: "Sweep by sections",
    patternPriority: "Priority (mixed)",
    patternAnchorPoints: "Anchor points",
    patternSpiralCw: "Spiral (clockwise)",
    patternSpiralCcw: "Spiral (counter-clockwise)",
    
    // Error messages and confirmations
    noProgressToSave: "No progress to save",
    progressSaveSuccess: "Progress saved as {filename}",
    progressLoadSuccess: "Progress loaded: {painted}/{total} pixels painted",
    invalidProgressFile: "Invalid progress file",
    missingFields: "Missing required fields: {fields}",
    
    // Confirmation dialogs
    guardDialogTitle: "Generate Guard JSON",
    guardDialogMessage: "Do you want to generate a Guard JSON file with current data?",
    guardDialogInfo: "Image: {name}\nDimensions: {width}x{height}\nPixels: {pixels}",
    generateGuard: "Generate Guard",
    guardJsonInvalidStructure: "‚ùå Invalid structure for Guard JSON. Aborting save.",
    guardJsonInvalidMessage: "Invalid Guard JSON structure. Try again after selecting position.",
    guardJsonSaveSuccess: "‚úÖ Guard JSON saved: {filename}",
    guardJsonSaveError: "‚ùå Error saving Guard JSON: {error}",
    
    // Notifications
    notificationInfo: "Information",
    notificationSuccess: "Success",
    notificationWarning: "Warning",
    notificationError: "Error",
    
    // New texts v2.0 
    paintPattern: "ÔøΩ Paint pattern",
    patternLinearStart: "Linear (Start)",
    patternLinearEnd: "Linear (End)",
    patternRandom: "Random",
    patternCenterOut: "Center outward",
    patternCornersFirst: "Corners first",
    patternSpiral: "Spiral",

    logWindow: "Logs",
    logWindowTitle: "Logs - {botName}",
    downloadLogs: "Download Logs",
    clearLogs: "Clear Logs",
    closeLogs: "Close",
    // New features
    userInfo: "User Information",
    imageProgress: "Image Progress",
    availableColors: "Available Colors",
    noImageLoaded: "No image loaded",
    cooldown: "Cooldown",
    totalColors: "Total Colors",
    colorPalette: "Color Palette",
    showAllColors: "Show All Colors (including unavailable)",
    selectAllColors: "Select All",
    unselectAllColors: "Unselect All",
    noAvailable: "Not available",
    colorSelected: "Color selected",
    statsUpdated: "‚úÖ Statistics updated: {count} colors available"
  },

  // Farm Module
  farm: {
    title: "üßë‚Äçüåæ WPlace Farm",
    start: "Start",
    stop: "Stop", 
    stopped: "Bot stopped",
    calibrate: "Calibrate",
    paintOnce: "Once",
    checkingStatus: "Checking status...",
    configuration: "Configuration",
    delay: "Delay (ms)",
    pixelsPerBatch: "Pixels/batch",
    minCharges: "Min charges",
    colorMode: "Color mode",
    random: "Random",
    fixed: "Fixed",
    range: "Range",
    fixedColor: "Fixed color",
    advanced: "Advanced",
    tileX: "Tile X",
    tileY: "Tile Y",
    customPalette: "Custom palette",
    paletteExample: "e.g: #FF0000,#00FF00,#0000FF",
  capture: "Capture",
    painted: "Painted",
    charges: "Charges",
  retries: "Retries",
  position: "Position",
    tile: "Tile",
    configSaved: "Configuration saved",
    configLoaded: "Configuration loaded",
    configReset: "Configuration reset",
    captureInstructions: "Paint a pixel manually to capture coordinates...",
    backendOnline: "Backend Online",
    backendOffline: "Backend Offline",
    startingBot: "Starting bot...",
    stoppingBot: "Stopping bot...",
    calibrating: "Calibrating...",
    alreadyRunning: "Auto-Farm is already running.",
    imageRunningWarning: "Auto-Image is running. Close it before starting Auto-Farm.",
    selectPositionAlert: "üéØ Paint a pixel in an EMPTY area of the map to set the farming zone",
    waitingPosition: "üëÜ Waiting for you to paint the reference pixel...",
  positionSet: "‚úÖ Zone set!",
    positionTimeout: "‚ùå Timeout for zone selection",
    missingPosition: "‚ùå Select a zone first using 'Select Zone'",
    farmRadius: "Farm radius",
    positionInfo: "Current zone",
    farmingInRadius: "üåæ Farming in {radius}px radius from ({x},{y})",
    selectEmptyArea: "‚ö†Ô∏è IMPORTANT: Select an EMPTY area to avoid conflicts",
    noPosition: "No zone",
    currentZone: "Zone: ({x},{y})",
    autoSelectPosition: "üéØ Select a zone first. Paint a pixel on the map to set the farming zone",
    logWindow: "Logs",
    logWindowTitle: "Logs - {botName}",
    downloadLogs: "Download Logs",
    clearLogs: "Clear Logs",
    closeLogs: "Close",

    // Additional keys used in src/farm/ui.js
    ready: "Ready",
    once: "Once",
    recapture: "Re-capture",
    selectPosition: "Select",

    // Nested sections for statistics and configuration
    stats: {
      painted: "Painted",
      charges: "Charges",
      droplets: "Droplets",
      user: "User",
      retries: "Retries"
    },
    config: {
      minCharges: "Minimum charges",
      delay: "Wait (sec)",
      pixelsPerBatch: "Pixels per batch"
    },
    color: {
      fixed: "Fixed",
      range: "Range",
      random: "Random",
      selected: "Selected color",
      min: "Min",
      max: "Max"
    },

    // Auto-buy and manual purchases
    autobuy: {
      title: "Auto-buy (+5 charges)",
      hint: "Will activate automatically when you have ‚â• 500 droplets"
    },
    buyCharges: "Buy +5 charges",
    buying: "Buying...",
    buyOk: "Purchase completed. Refresh session.",
    buyFail: "Could not purchase"
  },

  // Common/Shared
  common: {
    yes: "Yes",
    no: "No",
    ok: "OK",
    cancel: "Cancel",
    close: "Close",
    save: "Save",
    load: "Load",
    delete: "Delete",
    edit: "Edit",
    start: "Start",
    stop: "Stop",
    pause: "Pause",
    resume: "Resume",
    reset: "Reset",
    settings: "Settings",
    help: "Help",
    about: "About",
    language: "Language",
    loading: "Loading...",
    error: "Error",
    success: "Success",
    warning: "Warning",
    info: "Information",
    languageChanged: "Language changed to {language}"
  },

  // Guard Module
  guard: {
    title: "WPlace Auto-Guard",
    initBot: "Initialize Guard-BOT",
    selectArea: "Select Area",
    save: "Save",
    loadFile: "Load File",
    reposition: "Reposition",
    analyzeArea: "Analyze Area",
    logs: "Logs",
    watcher: "Watcher",
    configuration: "Configuration",
    startErase: "Start Erase",
    stopWatcher: "Stop Watcher",
    minimize: "Minimize",
    expand: "Expand",
    nextBatchIn: "Next batch in: ",
     captureArea: "Capture Area",
    startProtection: "Start",
    stopProtection: "Stop",
    protectedPixels: "Protected Pixels",
    upperLeft: "Upper Left Corner",
    lowerRight: "Lower Right Corner",
    detectedChanges: "Detected Changes",
    repairedPixels: "Repaired Pixels",
    charges: "Charges",
    waitingInit: "Waiting for initialization...",
    checkingColors: "üé® Checking available colors...",
    noColorsFound: "‚ùå No colors found. Open the color palette on the site.",
    colorsFound: "‚úÖ Found {count} available colors",
    initSuccess: "‚úÖ Guard-BOT initialized successfully",
    initError: "‚ùå Error initializing Guard-BOT",
    invalidCoords: "‚ùå Invalid coordinates",
    invalidArea: "‚ùå Area must have upper left corner less than lower right corner",
    areaTooLarge: "‚ùå Area too large: {size} pixels (maximum: {max})",
    capturingArea: "üì∏ Capturing area...",
    areaCaptured: "‚úÖ Area captured: {count} pixels",
    captureError: "‚ùå Error capturing area: {error}",
    captureFirst: "‚ùå First capture an area",
    noChanges: "‚úÖ Area - no changes detected",
    changesDetected: "üö® {count} changes detected in area",
    repairing: "üõ†Ô∏è Repairing {count} altered pixels...",
    repairedSuccess: "‚úÖ Successfully repaired {count} pixels",
    repairError: "‚ùå Error repairing pixels: {error}",
    noCharges: "‚ö†Ô∏è Insufficient charges to repair changes",
    checkingChanges: "üîç Checking changes in area...",
    errorChecking: "‚ùå Error checking changes: {error}",
    guardActive: "üõ°Ô∏è Guardian active - area monitored",
    lastCheck: "Last check: {time}",
    nextCheck: "Next check in: {time}s",
    autoInitializing: "ü§ñ Auto-initializing...",
    autoInitSuccess: "‚úÖ Guard-BOT auto-started successfully",
    autoInitFailed: "‚ö†Ô∏è Could not auto-start. Use manual button.",
    manualInitRequired: "üîß Manual initialization required",
    paletteDetected: "üé® Color palette detected",
    paletteNotFound: "üîç Searching for color palette...",
    clickingPaintButton: "üëÜ Clicking Paint button...",
    paintButtonNotFound: "‚ùå Paint button not found",
    protectionStopped: "‚èπÔ∏è Protection stopped",
    selectUpperLeft: "üéØ Paint a pixel at the UPPER LEFT corner of the area to monitor",
    selectLowerRight: "üéØ Now paint a pixel at the LOWER RIGHT corner of the area",
    waitingUpperLeft: "üëÜ Waiting for upper left corner selection...",
    waitingLowerRight: "üëÜ Waiting for lower right corner selection...",
    upperLeftCaptured: "‚úÖ Upper left corner captured: ({x}, {y})",
    lowerRightCaptured: "‚úÖ Lower right corner captured: ({x}, {y})",
    selectionTimeout: "‚ùå Selection timeout",
    selectionError: "‚ùå Selection error, please try again",
    logWindow: "Logs",
    logWindowTitle: "Logs - {botName}",
    downloadLogs: "Download Logs",
    clearLogs: "Clear Logs",
    closeLogs: "Close",
    // Analysis Window
    analysisTitle: "Difference Analysis - JSON vs Current Canvas",
    correctPixels: "Correct Pixels",
    incorrectPixels: "Incorrect Pixels",
    missingPixels: "Missing Pixels",
    showCorrect: "Show Correct",
    showIncorrect: "Show Incorrect",
    showMissing: "Show Missing",
    autoRefresh: "Auto-refresh",
    zoomAdjusted: "Zoom automatically adjusted to",
    autoRefreshEnabled: "Auto-refresh enabled every",
    autoRefreshDisabled: "Auto-refresh disabled",
    autoRefreshIntervalUpdated: "Auto-refresh interval updated to",
    visualizationUpdated: "Visualization updated",
    noAreaOrPixels: "No protected area or pixels loaded to analyze",
    noColorsDetected: "Cannot detect colors. Make sure the palette is open.",
    sessionRecordingStarted: "Session recording started with autorefresh enabled",
    sessionRecordingStopped: "Session recording stopped",
    noSessionData: "No session data to download",
    sessionDataDownloaded: "Session data downloaded",
    snapshotCaptureError: "Error capturing image",
    recordSession: "Record Session",
    snapshot: "Snapshot",
    downloadData: "Download Data",
    zoom: "Zoom",
    interval: "Interval",
    seconds: "seconds",
    updateAnalysis: "Update Analysis",
    adjustZoom: "Adjust Zoom",
    precision: "Precision",
    statistics: "Statistics",
    visualization: "Visualization",
    recording: "Recording",
    // Config Window
    configTitle: "Guard Configuration",
    protectionPatterns: "Protection Patterns",
    preferSpecificColor: "Prioritize specific color",
    excludeSpecificColors: "Don't repair specific colors",
    loadManagement: "Load Management",
    minLoadsToWait: "Minimum loads:",
    pixelsPerBatch: "Pixels per batch",
    spendAllPixelsOnStart: "Spend all pixels on start",
    waitTimes: "Wait Times",
    useRandomTimes: "Use random times between batches",
    minTime: "Minimum time (s)",
    maxTime: "Maximum time (s)"
  },

  // Slave Module
  slave: {
    title: "WPlace Slave",
    masterServer: "Master Server",
    ipAddress: "IP Address",
    connect: "Connect",
    disconnect: "Disconnect",
    status: "Status",
    slaveId: "Slave ID",
    mode: "Mode",
    running: "Running",
    idle: "Idle",
    connected: "Connected",
    connecting: "Connecting...",
    disconnected: "Disconnected",
    error: "Error",
    close: "Close",
    telemetry: "Telemetry",
    repairedPixels: "Repaired Pixels",
    missingPixels: "Missing Pixels",
    absentPixels: "Absent Pixels",
    remainingCharges: "Remaining Charges",
    connectionError: "Connection error. Check URL and that server is running.",
    invalidUrl: "Please enter a valid URL",
    httpsUpgrade: "HTTPS page: switching to wss:// to avoid mixed content.",
    slaveRunning: "Slave is already running.",
    slaveInitialized: "Slave initialized successfully",
    slaveError: "Error initializing Slave",
    masterConnected: "Connected to master server",
    masterDisconnected: "Disconnected from master server",
    reconnecting: "Retrying connection",
    maxReconnectAttempts: "Maximum reconnection attempts reached",
    modeSet: "Mode configured",
    projectLoaded: "Project configuration loaded",
    botStarted: "Bot started",
    botStopped: "Bot stopped",
    botPaused: "Bot paused"
  }
};
